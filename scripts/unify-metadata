#! /usr/bin/env python
import argparse
import unify_metadata
import sys


parser = argparse.ArgumentParser(description='TBProfiler pipeline',formatter_class=argparse.ArgumentDefaultsHelpFormatter,add_help=False)
subparsers = parser.add_subparsers(help="Task to perform")

# Profile #
parser_sub = subparsers.add_parser('mappings', help='Run whole profiling pipeline', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser_sub.add_argument("--raw-data",type=str,help="Raw data file",required=True)
parser_sub.add_argument("--outfile",default="mappings.conf",type=str,help="Output file")
parser_sub.add_argument("--defaults",type=str,help="Comma separated list of drugs",required=True)
parser_sub.set_defaults(func=unify_metadata.get_mapping_skeleton)


# Profile #
parser_sub = subparsers.add_parser('standardise', help='Run whole profiling pipeline', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser_sub.add_argument("--conf",type=str,help="Raw data file",required=True)
parser_sub.add_argument("--outfile",type=str,help="Raw data file",required=True)
parser_sub.add_argument("--raw-data",type=str,help="Raw data file",required=True)
parser_sub.set_defaults(func=unify_metadata.standardise_raw_data)

parser_sub = subparsers.add_parser('combine', help='Combine multiple csv files together', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser_sub.add_argument("--id",type=str,help="Raw data file",required=True)
parser_sub.add_argument("--additional-data",type=str,help="Raw data file")
parser_sub.add_argument("--additional-data-id",type=str,help="Raw data file")
parser_sub.add_argument("--missing-value",default="NA",type=str,help="Raw data file")
parser_sub.add_argument("--outfile",type=str,help="Raw data file",required=True)
parser_sub.add_argument("files",type=str,nargs="+",help="Raw data file")
parser_sub.set_defaults(func=unify_metadata.combine_csv_files)

parser_sub = subparsers.add_parser('bioproject-csv', help='Combine multiple csv files together', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser_sub.add_argument("--taxid",type=str,help="Raw data file",required=True)
parser_sub.add_argument("--bioprojects",type=str,nargs="+",help="Raw data file",required=True)
parser_sub.add_argument("--defaults",type=str,help="Raw data file",required=True)
parser_sub.add_argument("--outfile",type=str,default="data.clean.csv",help="Raw data file")
parser_sub.add_argument("--additional-data",type=str,help="Raw data file")
parser_sub.add_argument("--additional-data-id",type=str,help="Raw data file")
parser_sub.set_defaults(func=unify_metadata.ena.generate_data_from_bioprojects)

parser_sub = subparsers.add_parser('udpate-ena', help='Combine multiple csv files together', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser_sub.add_argument("--taxid",type=str,help="Raw data file",required=True)
parser_sub.set_defaults(func=unify_metadata.cli.cli_update_ena_db)


args = parser.parse_args()
if hasattr(args, 'func'):
    args.func(args)
else:
    parser.print_help(sys.stderr)